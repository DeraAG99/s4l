name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/s4lauth:latest ./Auth/
          docker build -t ${{ secrets.DOCKER_USERNAME }}/s4lgame:latest ./Game/
          docker push ${{ secrets.DOCKER_USERNAME }}/s4lauth:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/s4lgame:latest

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Pulling Image
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            docker stop s4lauth || true
            docker rm s4lauth || true
            docker stop s4lgame || true
            docker rm s4lgame || true
            docker rmi ${{ secrets.DOCKER_USERNAME }}/s4lauth:latest || true
            docker rmi ${{ secrets.DOCKER_USERNAME }}/s4lgame:latest || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/s4lauth:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/s4lgame:latest
          EOF

      - name: Export environment variables
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> $GITHUB_ENV
          echo "API_AUTH=${{ secrets.API_AUTH }}" >> $GITHUB_ENV
          echo "API_GAME=${{ secrets.API_GAME }}" >> $GITHUB_ENV
          echo "IP_SERVER=${{ secrets.IP_SERVER }}" >> $GITHUB_ENV

      - name: Deploying
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            export DB_HOST=${DB_HOST}
            export DB_PORT=${DB_PORT}
            export DB_USERNAME=${DB_USERNAME}
            export DB_PASSWORD=${DB_PASSWORD}
            export DB_DATABASE=${DB_DATABASE}
            export API_AUTH=${API_AUTH}
            export API_GAME=${API_GAME}
            export IP_SERVER=${IP_SERVER}
            docker-compose up -d
          EOF
